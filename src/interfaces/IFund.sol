// SPDX-License-Identifier: UNLICENSED
// @todo !! THIS FILE WAS AUTOGENERATED BY abi-to-sol v0.6.6.
pragma solidity 0.8.18;

interface IFund {
    event AccountCapitalCallDone(uint256 callId, address account);
    event AccountCapitalCallFailed(uint256 callId, address account);
    event CapitalCallAdded(uint256 callId, uint256 amount, string drawdownType, uint256 time);
    event GpCommitmentAdded(address indexed account, uint256 amount, uint256 timestamp);
    event LpCommitmentAdded(address indexed account, uint256 amount, uint256 timestamp);
    event LpCommitmentApproved(address indexed account, uint256 amount, uint256 timestamp);
    event LpCommitmentCancelled(address indexed account, uint256 timestamp);
    event LpCommitmentRejected(address indexed account, uint256 timestamp);
    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);
    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);
    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);

    function DEFAULT_ADMIN_ROLE() external view returns (bytes32);
    function FUND_ADMIN() external view returns (bytes32);
    function TOKEN_ADMIN() external view returns (bytes32);
    function _initTokens(address usdc) external;
    function _nextQuarter(uint256 timestamp) external pure returns (uint256);
    function accountCapitalCalls(address, uint256)
        external
        view
        returns (uint256 amount, uint256 timestamp, uint8 accountType, bool isDone, bool hasFailed);
    function addAccountCapitalCall(uint256 callId, address account, uint256 amount, uint8 accountType) external;
    function addCapitalCall(uint256 amount, string memory drawdownType, uint256 time) external returns (uint256);
    function addGpCatchup(uint256 _value) external;
    function addGpReturn(uint256 _value) external;
    function addLpReturn(uint256 _value) external;
    function addRedemption(address account, uint256 amount, uint256 time) external;
    function approveCommits(address[] calldata account, uint256 time) external;
    function approveRedemption(address account, uint256 time) external;
    function blockSize() external view returns (uint256);
    function cancelCommit(address account, uint256 time) external;
    function cancelRedemption(address account, uint256 time) external;
    function capitalCall(uint256 amount, string memory drawdownType, uint32 time) external returns (uint256 callId);
    function capitalCallDone(uint256 callId, address account, uint256 price) external;
    function capitalCallFailed(uint256 callId, address account) external;
    function capitalCalls(uint256) external view returns (uint256 amount, string memory drawdownType, uint256 time);
    function capitalCallsCount() external view returns (uint256);
    function carriedInterest() external view returns (uint8);
    function chargeExpense(uint256 amount, uint256 timestamp, string memory expenseType) external;
    function chargeManagementFee() external;
    function commit(address account, uint256 amount, uint256 time) external;
    function compoundingInterval() external view returns (uint8);
    function convertEncodedTime(uint256 timestamp) external pure returns (uint256);
    function dates()
        external
        view
        returns (uint32 initialClosing, uint32 finalClosing, uint32 commitmentDate, uint32 endDate);
    function deployCapital(uint256 amount, uint32 time, address assetContract) external;
    function deploymentStart() external view returns (uint32);
    function deployments(uint256) external view returns (uint256 amount, uint32 time, address assetContract);
    function distribute(uint256 amount, string memory distributionType, uint32 time) external;
    function distributions(uint32)
        external
        view
        returns (uint256 amount, string memory distributionType, uint256 time);
    function distributionsCount() external view returns (uint16);
    function expenses(uint256) external view returns (uint256 amount, uint256 timestamp, string memory expenseType);
    function feeHistory(uint256) external view returns (uint8 fee, uint256 time);
    function getCompoundingInterval() external view returns (uint8);
    function getExpensesCount() external view returns (uint256);
    function getGpReturn() external view returns (uint256);
    function getLastInterestEntry() external view returns (uint32, uint256, uint256, uint256);
    function getLpReturn() external view returns (uint256);
    function getPrefRate() external view returns (uint256);
    function getRoleAdmin(bytes32 role) external view returns (bytes32);
    function getTotalCommittedGP() external view returns (uint256);
    function getTotalCommittedLP() external view returns (uint256);
    function getTotalExpenses() external view returns (uint256);
    function getTotalInterest() external view returns (uint256);
    function gpAccounts(uint256) external view returns (address);
    function gpCatchup() external view returns (uint256);
    function gpClawback() external view returns (uint8);
    function gpClawbackPerc() external view returns (uint256);
    function gpCommitToken() external view returns (address);
    function gpCommitments(address) external view returns (uint256 amount, uint256 timestamp, uint8 status);
    function gpFundToken() external view returns (address);
    function gpReturn() external view returns (uint256);
    function grantRole(bytes32 role, address account) external;
    function hasRole(bytes32 role, address account) external view returns (bool);
    function issueGpCommit(address account, uint256 amount, uint256 time) external;
    function lpAccounts(uint256) external view returns (address);
    function lpCommitToken() external view returns (address);
    function lpCommitments(address) external view returns (uint256 amount, uint256 timestamp, uint8 status);
    function lpFundToken() external view returns (address);
    function lpReturn() external view returns (uint256);
    function managementFee() external view returns (uint8);
    function mgtFee() external view returns (uint256);
    function name() external view returns (string memory);
    function prefRate() external view returns (uint256);
    function price() external view returns (uint256);
    function redeem(address account, uint256 amount, uint256 time) external;
    function redemptions(address) external view returns (address account, uint256 amount, uint256 time, uint8 status);
    function registry() external view returns (address);
    function rejectRedemption(address account, uint256 time) external;
    function renounceRole(bytes32 role, address account) external;
    function revokeRole(bytes32 role, address account) external;
    function scale() external view returns (uint8);
    function setBlockSize(uint256 _blockSize) external;
    function setCommitmentDate(uint32 _commitmentDate) external;
    function setDeploymentStart(uint32 value) external;
    function setEndDate(uint32 _endDate) external;
    function setFinalClosing(uint32 _finalClosing) external;
    function setInitialClosing(uint32 _initialClosing) external;
    function setTotalExpenses(uint256 value) external;
    function size() external view returns (uint256);
    function supportsInterface(bytes4 interfaceId) external view returns (bool);
    function totalCalled() external view returns (uint256);
    function totalCommitted() external view returns (uint256);
    function totalCommittedGp() external view returns (uint256);
    function totalCommittedLp() external view returns (uint256);
    function totalDeployed() external view returns (uint256);
    function totalDistribution() external view returns (uint256);
    function totalExpenses() external view returns (uint256);
    function totalInterest() external view returns (uint256);
    function totalRedemptions() external view returns (uint256);
}
